package ru.geekbrains.java3.lesson3_io;

public class io_5_BufferedInputStream_BufferedOutputStream {
    // Когда мы работаем с FileInputStream с методом read(), то при его вызове нам прилетает байт.
    // Это происходит за счет обращения к ОС каждый раз.
    // При использовании же BufferedInputStream и вызова read, когда мы хотим получить один байт,
    // ОС считывает сразу пакет байтов, запишет в буфер и будет отдавать их по мере наших запросов. Когда она отдаст всё,
    // то вновь прочтет из памяти блок данных и запишет в буфер. Стандартный размер буфера 8192 байта
    // Это уменьшает число обращений к ОС для считывания данных из памяти

//    С BufferedOutputStream идея таже.
//    Когда мы что-то часто пишем на диск, при этом у нас нет необходимости держать эти данные в актуальном состоянии,
//    мы можем класть их в буфер и потом за одно обращение к ОС выгружать их в память.
//    При каждом обращении к write мы записываем данные в буфер и когда в нем заканчивается место, то мы выгружаем его.
//    При работе с буферизирующими потоками есть метод flush,
//    который выгружает данные из буфера (так же автоматически вызывается при закрытии файла)
    public static void main(String[] args) {

    }
}
